name: Rust CI

on:
  push:
    branches: [ main ]
    paths:
      - 'rustui/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'rustui/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rustui
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path rustui/Cargo.toml

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rustui
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path rustui/Cargo.toml

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rustui
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path rustui/Cargo.toml -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rustui
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path rustui/Cargo.toml -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rustui
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install cargo-tarpaulin
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: latest
          use-tool-cache: true
      - name: Run cargo-tarpaulin
        run: cargo tarpaulin --manifest-path rustui/Cargo.toml --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: false